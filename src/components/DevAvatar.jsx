/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/devAvatar.glb 
*/

import { useEffect, useRef } from 'react'

import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function DevAvatar({ animationName = 'thoughtful', ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('models/animations/devAvatar.glb');
  const { animations: thoughtfulAnimation } = useFBX('models/animations/thoughtful.fbx')
  const { animations: idleAnimation } = useFBX('models/animations/idle.fbx');
  const { animations: saluteAnimation } = useFBX('models/animations/salute.fbx');
  const { animations: clappingAnimation } = useFBX('models/animations/clapping.fbx');
  const { animations: wavingAnimation } = useFBX('models/animations/waving2.fbx');
  const { animations: shakingHandAnimation } = useFBX('models/animations/shakinghand.fbx');
  const { animations: pointingAnimation } = useFBX('models/animations/pointing.fbx');
  const { animations: agreeingAnimation } = useFBX('models/animations/agreeing.fbx');

  thoughtfulAnimation[0].name = 'thoughtful';
  idleAnimation[0].name = 'idle';
  saluteAnimation[0].name = 'salute';
  clappingAnimation[0].name = 'clapping';
  wavingAnimation[0].name = 'waving';
  shakingHandAnimation[0].name = 'shakingHand';
  pointingAnimation[0].name = 'pointing';
  agreeingAnimation[0].name = 'agreeing';

  const { actions } = useAnimations(
    [idleAnimation[0], saluteAnimation[0], clappingAnimation[0], thoughtfulAnimation[0], wavingAnimation[0], shakingHandAnimation[0], pointingAnimation[0], agreeingAnimation[0]],
    group,
  );

  useEffect(() => {
    actions[animationName].reset().fadeIn().play();
    return () => actions[animationName].fadeOut(2.5);

  }, [animationName]);

  return (
    <group {...props} dispose={null} ref={group} rotation-x={-Math.PI / 2 - 0.01 }>
  
        <primitive object={nodes.Hips}  />
        <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
        <skinnedMesh geometry={nodes.Wolf3D_Glasses.geometry} material={materials.Wolf3D_Glasses} skeleton={nodes.Wolf3D_Glasses.skeleton} />
        <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
        <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
        <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
        <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
        <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
        <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
        <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
        <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
        <skinnedMesh name="Wolf3D_Beard" geometry={nodes.Wolf3D_Beard.geometry} material={materials.Wolf3D_Beard} skeleton={nodes.Wolf3D_Beard.skeleton} morphTargetDictionary={nodes.Wolf3D_Beard.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Beard.morphTargetInfluences} />
    
    </group>
  )
}

useGLTF.preload('models/animations/devAvatar.glb')
