/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useAnimations, useFBX, useGLTF } from "@react-three/drei";

import  { useEffect, useRef} from "react";


export function Avatar2({animation = "thoughtful", ...props}) {
  

  const group = useRef();
  const { nodes, materials } = useGLTF("models/devAvatar2.glb");
 
  const { animations: sittingAnimation } = useFBX("animations/sitting3.fbx");
  const { animations: sitToStandAnimation } = useFBX("animations/sitToStand.fbx");
  const { animations: standToSitAnimation } = useFBX("animations/standToSit.fbx");
  const { animations: wavingAnimation } = useFBX("animations/waving.fbx");
  const { animations: thoughtfulAnimation } = useFBX("animations/thoughtful.fbx");
  const { animations: dancingAnimation } = useFBX("animations/dancing.fbx");
  const { animations: saluteAnimation } = useFBX("animations/salute.fbx");
  const { animations: clappingAnimation } = useFBX("animations/clapping.fbx");
  const { animations: acknowledgingAnimation } = useFBX("animations/acknowledging.fbx");
  const { animations: standingThumbsUpAnimation } = useFBX("animations/standingThumbsUp.fbx");


  sittingAnimation[0].name = "sitting";
  sitToStandAnimation[0].name = "sitToStand";
  standToSitAnimation[0].name = "standToSit";
  wavingAnimation[0].name = "waving";
  thoughtfulAnimation[0].name = "thoughtful";
  dancingAnimation[0].name = "dancing";
  saluteAnimation[0].name = "salute";
  clappingAnimation[0].name = "clapping";
  acknowledgingAnimation[0].name = "acknowledging";
  standingThumbsUpAnimation[0].name = "standingThumbsUp";

  


  const { actions } = useAnimations(
    [sittingAnimation[0], sitToStandAnimation[0],  standToSitAnimation[0], wavingAnimation[0], thoughtfulAnimation[0], dancingAnimation[0], saluteAnimation[0], clappingAnimation[0], acknowledgingAnimation[0], standingThumbsUpAnimation[0], ],
    group
  );

  useEffect(() => {
    actions[animation].reset();

  }, []);

  useEffect(() => {
    actions[animation].fadeIn(1).play();
    return () => {
      actions[animation].fadeOut(1);
    };
  }, [animation]);

 
  return (
    <group {...props} ref={group} dispose={null}>
 
 <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Glasses.geometry} material={materials.Wolf3D_Glasses} skeleton={nodes.Wolf3D_Glasses.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Beard" geometry={nodes.Wolf3D_Beard.geometry} material={materials.Wolf3D_Beard} skeleton={nodes.Wolf3D_Beard.skeleton} morphTargetDictionary={nodes.Wolf3D_Beard.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Beard.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
     
    </group>
  );
}

useGLTF.preload("models/devAvatar2.glb");
